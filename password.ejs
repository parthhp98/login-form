<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">        
    <style>
                body{
            background-color:lavenderblush;
        }
      fieldset{
          border: 4px solid rgb(0, 153, 255);
          border-radius: 12px;
          padding: 10px;
          margin: 4px;
      }
      p{
          color: red;
      }

        .nav-menu{
            display: flex;
         gap: 69px;
         text-align: center;
         justify-content: center;
         text-decoration: none;
         padding-top: 20px;
         list-style-type: none;
         padding-right: 184px;
        }
        .nav-menu  li a ::marker{
            list-style-type:none;
        }   
        .nav-menu a{
            text-decoration: none;
            list-style-type:none;   
        }
        #head{
            padding-right: 114px;
        }
    </style>
</head>
<body>
    <h2>Parth Patil</h2>
    <form id ="form" >
    <div id="formContainer">
                <div class="container"  >
                  <div class="row" >
                            <!-- Basic Details-->
                    <div class="col">
                       <fieldset id="basicDetails" class="form-section active">
                        <div class="container" >
                            <div class="row">
                                <div class="col-md-6-">
                                    <label for="create_passwd" >Create Password</label>
                                    <input name="create_passwd" id="create_passwd" type="text" class="form-control"/>
                                    <p class="passwd" id="not_number"></p>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6-">
                                    <label name="repeat_passwd" >Repeat Password</label>
                                    <input name="repeat_passwd" id="repeat_passwd" type="text"  class="form-control"/>
                                    <p class="passwd" id="not_number"></p>
                                </div>
                            </div>
                               <p id="error"></p>
                                <center>  <p id="password" class="btn btn-secondary btn-lg" onclick="passwdsub()" > Submitt </p>
                                 </center>
                            </div>
                        </div>
                      </fieldset>
                    </div>
                    </div>
                </div>
            </form>
</body>
<script>
function passwdvalidate(){
      document.getElementById('error').innerHTML='';
    let p1=document.getElementById('create_passwd').value;
    let p2=document.getElementById('repeat_passwd').value;

    if(p1=='' || p2==''){
        console.log('Enter Password');
        document.getElementById('error').innerHTML='Enter Password';
        return false;
    }

    if(p1.length<8 || p2.length<8){
        console.log('Password should be min 8 char long');
        document.getElementById('error').innerHTML='Password should be min 8 char long';
        return false;
    }

    if(p1!=p2){
        console.log('Password does not match');
        document.getElementById('error').innerHTML='Password does not match';
        return false;
    }

    else{
        return true;
    }
}
// passwdvalidate();



async function passwdsub() {
   console.log('going in funmction ')
  const chk=  passwdvalidate();
// document.getElementById('password').style.display='block';
const form = document.getElementById('form');
const formData = new FormData(form);
const serializedFormData = {};

for (const [key, value] of formData.entries()) {
const fieldName = key.replace('[]', ''); // Remove '[]' from field name
if (!serializedFormData[fieldName]) {
    serializedFormData[fieldName] = [];
}
serializedFormData[fieldName].push(value);
}
let urllink=window.location.href;
  if(chk){

    // for act code pass
    if(urllink.substring(22).startsWith('passwd')){
        let lt=window.location.href;
let actcode=lt.substring(29,lt.length); 
  console.log('in act code link');
console.log('accttcode',actcode)
     try {
        console.log('trrryy');
  const response = await fetch(`/passwd/${actcode}`, {
      method: 'POST',
      headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
      },
      body: JSON.stringify(serializedFormData)
  });    

  if (!response.ok) {
      throw new Error('Network response was not ok');
  }
  window.location.href=`http://localhost:9012/login`;
  const data = await response.json();
  console.log(data);

  console.log('Form data sent successfully:', data);

} catch (error) {
  console.error('There was a problem with your fetch operation:', error);
}
}

// for email based password
// if(urllink.substring(22).startsWith('forget'))
if(urllink.substring(22).startsWith('forget')){
    let link=window.location.href;
    console.log('in email link');
let email=link.substring(29,link.length); 
console.log('email',email)
    try {
        console.log('trrryy');
  const response = await fetch(`/forget/${email}`, {
      method: 'POST',
      headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
      },
      body: JSON.stringify(serializedFormData)
  });    

  if (!response.ok) {
      throw new Error('Network response was not ok');
  }
  window.location.href=`http://localhost:9012/login`;
  const data = await response.json();
  console.log(data);

  console.log('Form data sent successfully:', data);

} catch (error) {
  console.error('There was a problem with your fetch operation:', error);
}
}

}

}

</script>
</html>